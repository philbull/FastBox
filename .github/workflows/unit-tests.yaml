name: Tests

# Test on all pushes, except when the push is literally just a tag (because we
# tag automatically via CI, and therefore there's no extra code in that push).
# Also, only test on pull requests into master.
on:
  pull_request:
  push:
    branches: [main]

jobs:
  tests:
    env:
      ENV_NAME: tests
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    name: Testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macos-latest]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: set PY
        run: echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_ENV

      - name: Setup Environment
        run: |
          which pip
          pip install numpy
          pip install scipy matplotlib sklearn pytest ipython coverage \
                      scikit-image pytest-cov cython
          pip install pyccl
          pip install nbodykit
          pip install .

      - name: Run Tests
        run: |
          pytest --cov=fastbox \
                 --cov-config="./.coveragerc" \
                 --cov-report xml:"./coverage.xml" \
                 --junitxml="./test-reports/xunit.xml"

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          token: ""
          files: ./coverage.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: false
